{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "index.es6.js",
    "node_modules/assert/assert.js",
    "node_modules/process/browser.js",
    "node_modules/util/node_modules/inherits/inherits_browser.js",
    "node_modules/util/support/isBufferBrowser.js",
    "node_modules/util/util.js",
    "spec/reference-implementation/lib/byte-length-queuing-strategy.js",
    "spec/reference-implementation/lib/count-queuing-strategy.js",
    "spec/reference-implementation/lib/helpers.js",
    "spec/reference-implementation/lib/queue-with-sizes.js",
    "spec/reference-implementation/lib/readable-stream.js",
    "spec/reference-implementation/lib/transform-stream.js",
    "spec/reference-implementation/lib/utils.js",
    "spec/reference-implementation/lib/writable-stream.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "export const\n  { ReadableStream } = require('./spec/reference-implementation/lib/readable-stream'),\n  { WritableStream } = require('./spec/reference-implementation/lib/writable-stream'),\n  ByteLengthQueuingStrategy = require('./spec/reference-implementation/lib/byte-length-queuing-strategy'),\n  CountQueuingStrategy = require('./spec/reference-implementation/lib/count-queuing-strategy'),\n  TransformStream = require('./spec/reference-implementation/lib/transform-stream').TransformStream;\n\nconst interfaces = {\n  ReadableStream,\n  WritableStream,\n  ByteLengthQueuingStrategy,\n  CountQueuingStrategy,\n  TransformStream\n};\n\n// Export\nexport default interfaces;\n\n// Add classes to window\nif ( typeof window !== \"undefined\" )\n  Object.assign( window, interfaces );\n",
    "// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// when used in node, this will actually load the util module we depend on\n// versus loading the builtin util module as happens otherwise\n// this is a bug in node module loading as far as I am concerned\nvar util = require('util/');\n\nvar pSlice = Array.prototype.slice;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  }\n  else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = stackStartFunction.name;\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction replacer(key, value) {\n  if (util.isUndefined(value)) {\n    return '' + value;\n  }\n  if (util.isNumber(value) && !isFinite(value)) {\n    return value.toString();\n  }\n  if (util.isFunction(value) || util.isRegExp(value)) {\n    return value.toString();\n  }\n  return value;\n}\n\nfunction truncate(s, n) {\n  if (util.isString(s)) {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction getMessage(self) {\n  return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(JSON.stringify(self.expected, replacer), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (util.isBuffer(actual) && util.isBuffer(expected)) {\n    if (actual.length != expected.length) return false;\n\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i] !== expected[i]) return false;\n    }\n\n    return true;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!util.isObject(actual) && !util.isObject(expected)) {\n    return actual == expected;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b) {\n  if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b)) {\n    return a === b;\n  }\n  var aIsArgs = isArguments(a),\n      bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b);\n  }\n  var ka = objectKeys(a),\n      kb = objectKeys(b),\n      key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  } else if (actual instanceof expected) {\n    return true;\n  } else if (expected.call({}, actual) === true) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (util.isString(expected)) {\n    message = expected;\n    expected = null;\n  }\n\n  try {\n    block();\n  } catch (e) {\n    actual = e;\n  }\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  if (!shouldThrow && expectedException(actual, expected)) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws.apply(this, [true].concat(pSlice.call(arguments)));\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/message) {\n  _throws.apply(this, [false].concat(pSlice.call(arguments)));\n};\n\nassert.ifError = function(err) { if (err) {throw err;}};\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n",
    "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",
    "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n",
    "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n",
    "'use strict';\nconst { createDataProperty } = require('./helpers.js');\n\nmodule.exports = class ByteLengthQueuingStrategy {\n  constructor({ highWaterMark }) {\n    createDataProperty(this, 'highWaterMark', highWaterMark);\n  }\n\n  size(chunk) {\n    return chunk.byteLength;\n  }\n};\n",
    "'use strict';\nconst { createDataProperty } = require('./helpers.js');\n\nmodule.exports = class CountQueuingStrategy {\n  constructor({ highWaterMark }) {\n    createDataProperty(this, 'highWaterMark', highWaterMark);\n  }\n\n  size() {\n    return 1;\n  }\n};\n",
    "'use strict';\nconst assert = require('assert');\n\nfunction IsPropertyKey(argument) {\n  return typeof argument === 'string' || typeof argument === 'symbol';\n}\n\nexports.typeIsObject = x => (typeof x === 'object' && x !== null) || typeof x === 'function';\n\nexports.createDataProperty = (o, p, v) => {\n  assert(exports.typeIsObject(o));\n  Object.defineProperty(o, p, { value: v, writable: true, enumerable: true, configurable: true });\n};\n\nexports.createArrayFromList = elements => {\n  // We use arrays to represent lists, so this is basically a no-op.\n  // Do a slice though just in case we happen to depend on the unique-ness.\n  return elements.slice();\n};\n\nexports.ArrayBufferCopy = (dest, destOffset, src, srcOffset, n) => {\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n};\n\nexports.CreateIterResultObject = (value, done) => {\n  assert(typeof done === 'boolean');\n  const obj = {};\n  Object.defineProperty(obj, 'value', { value, enumerable: true, writable: true, configurable: true });\n  Object.defineProperty(obj, 'done', { value: done, enumerable: true, writable: true, configurable: true });\n  return obj;\n};\n\nexports.IsFiniteNonNegativeNumber = v => {\n  if (Number.isNaN(v)) {\n    return false;\n  }\n  if (v === Infinity) {\n    return false;\n  }\n  if (v < 0) {\n    return false;\n  }\n\n  return true;\n};\n\nfunction Call(F, V, args) {\n  if (typeof F !== 'function') {\n    throw new TypeError('Argument is not a function');\n  }\n\n  return Function.prototype.apply.call(F, V, args);\n}\n\nexports.InvokeOrNoop = (O, P, args) => {\n  assert(O !== undefined);\n  assert(IsPropertyKey(P));\n  assert(Array.isArray(args));\n\n  const method = O[P];\n  if (method === undefined) {\n    return undefined;\n  }\n\n  return Call(method, O, args);\n};\n\nexports.PromiseInvokeOrNoop = (O, P, args) => {\n  assert(O !== undefined);\n  assert(IsPropertyKey(P));\n  assert(Array.isArray(args));\n  try {\n    return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n  } catch (returnValueE) {\n    return Promise.reject(returnValueE);\n  }\n};\n\nexports.PromiseInvokeOrPerformFallback = (O, P, args, F, argsF) => {\n  assert(O !== undefined);\n  assert(IsPropertyKey(P));\n  assert(Array.isArray(args));\n  assert(Array.isArray(argsF));\n\n  let method;\n  try {\n    method = O[P];\n  } catch (methodE) {\n    return Promise.reject(methodE);\n  }\n\n  if (method === undefined) {\n    return F(...argsF);\n  }\n\n  try {\n    return Promise.resolve(Call(method, O, args));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nexports.PromiseInvokeOrFallbackOrNoop = (O, P1, args1, P2, args2) => {\n  assert(O !== undefined);\n  assert(IsPropertyKey(P1));\n  assert(Array.isArray(args1));\n  assert(IsPropertyKey(P2));\n  assert(Array.isArray(args2));\n\n  return exports.PromiseInvokeOrPerformFallback(O, P1, args1, exports.PromiseInvokeOrNoop, [O, P2, args2]);\n};\n\n// Not implemented correctly\nexports.SameRealmTransfer = O => O;\n\nexports.ValidateAndNormalizeHighWaterMark = highWaterMark => {\n  highWaterMark = Number(highWaterMark);\n  if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n    throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n  }\n\n  return highWaterMark;\n};\n\nexports.ValidateAndNormalizeQueuingStrategy = (size, highWaterMark) => {\n  if (size !== undefined && typeof size !== 'function') {\n    throw new TypeError('size property of a queuing strategy must be a function');\n  }\n\n  highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n  return { size, highWaterMark };\n};\n",
    "'use strict';\nconst assert = require('assert');\nconst { IsFiniteNonNegativeNumber } = require('./helpers.js');\n\nexports.DequeueValue = queue => {\n  assert(queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n  const pair = queue.shift();\n\n  queue._totalSize -= pair.size;\n\n  return pair.value;\n};\n\nexports.EnqueueValueWithSize = (queue, value, size) => {\n  size = Number(size);\n  if (!IsFiniteNonNegativeNumber(size)) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  queue.push({ value, size });\n\n  if (queue._totalSize === undefined) {\n    queue._totalSize = 0;\n  }\n  queue._totalSize += size;\n};\n\n// This implementation is not per-spec. Total size is cached for speed.\nexports.GetTotalQueueSize = queue => {\n  if (queue._totalSize === undefined) {\n    queue._totalSize = 0;\n  }\n  return queue._totalSize;\n};\n\nexports.PeekQueueValue = queue => {\n  assert(queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n  const pair = queue[0];\n  return pair.value;\n};\n",
    "'use strict';\nconst assert = require('assert');\nconst { ArrayBufferCopy, CreateIterResultObject, IsFiniteNonNegativeNumber, InvokeOrNoop, PromiseInvokeOrNoop,\n        SameRealmTransfer, ValidateAndNormalizeQueuingStrategy, ValidateAndNormalizeHighWaterMark } =\n      require('./helpers.js');\nconst { createArrayFromList, createDataProperty, typeIsObject } = require('./helpers.js');\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\nconst { DequeueValue, EnqueueValueWithSize, GetTotalQueueSize } = require('./queue-with-sizes.js');\nconst { AcquireWritableStreamDefaultWriter, IsWritableStream, IsWritableStreamLocked,\n        WritableStreamAbort, WritableStreamDefaultWriterCloseWithErrorPropagation,\n        WritableStreamDefaultWriterRelease, WritableStreamDefaultWriterWrite } = require('./writable-stream.js');\n\nconst InternalCancel = Symbol('[[Cancel]]');\nconst InternalPull = Symbol('[[Pull]]');\n\nclass ReadableStream {\n  constructor(underlyingSource = {}, { size, highWaterMark } = {}) {\n    // Exposed to controllers.\n    this._state = 'readable';\n\n    this._reader = undefined;\n    this._storedError = undefined;\n\n    this._disturbed = false;\n\n    // Initialize to undefined first because the constructor of the controller checks this\n    // variable to validate the caller.\n    this._readableStreamController = undefined;\n    const type = underlyingSource.type;\n    const typeString = String(type);\n    if (typeString === 'bytes') {\n      if (highWaterMark === undefined) {\n        highWaterMark = 0;\n      }\n      this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n    } else if (type === undefined) {\n      if (highWaterMark === undefined) {\n        highWaterMark = 1;\n      }\n      this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n    } else {\n      throw new RangeError('Invalid type is specified');\n    }\n  }\n\n  get locked() {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  cancel(reason) {\n    if (IsReadableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  getReader({ mode } = {}) {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    if (mode === 'byob') {\n      if (IsReadableByteStreamController(this._readableStreamController) === false) {\n        throw new TypeError('Cannot get a ReadableStreamBYOBReader for a stream not constructed with a byte source');\n      }\n\n      return AcquireReadableStreamBYOBReader(this);\n    }\n\n    if (mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    throw new RangeError('Invalid mode is specified');\n  }\n\n  pipeThrough({ writable, readable }, options) {\n    this.pipeTo(writable, options);\n    return readable;\n  }\n\n  pipeTo(dest, { preventClose, preventAbort, preventCancel } = {}) {\n    if (IsReadableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('pipeTo'));\n    }\n    if (IsWritableStream(dest) === false) {\n      return Promise.reject(\n        new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n    }\n\n    preventClose = Boolean(preventClose);\n    preventAbort = Boolean(preventAbort);\n    preventCancel = Boolean(preventCancel);\n\n    if (IsReadableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n    }\n    if (IsWritableStreamLocked(dest) === true) {\n      return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n    }\n\n    const reader = AcquireReadableStreamDefaultReader(this);\n    const writer = AcquireWritableStreamDefaultWriter(dest);\n\n    let shuttingDown = false;\n\n    // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n    let currentWrite = Promise.resolve();\n\n    return new Promise((resolve, reject) => {\n      // Using reader and writer, read all chunks from this and write them to dest\n      // - Backpressure must be enforced\n      // - Shutdown must stop all activity\n      function pipeLoop() {\n        currentWrite = Promise.resolve();\n\n        if (shuttingDown === true) {\n          return Promise.resolve();\n        }\n\n        return writer._readyPromise.then(() => {\n          return ReadableStreamDefaultReaderRead(reader).then(({ value, done }) => {\n            if (done === true) {\n              return undefined;\n            }\n\n            currentWrite = WritableStreamDefaultWriterWrite(writer, value);\n            return currentWrite;\n          });\n        })\n        .then(pipeLoop);\n      }\n\n      // Errors must be propagated forward\n      isOrBecomesErrored(this, reader._closedPromise, storedError => {\n        if (preventAbort === false) {\n          shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n        } else {\n          shutdown(true, storedError);\n        }\n      });\n\n      // Errors must be propagated backward\n      isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n        if (preventCancel === false) {\n          shutdownWithAction(() => ReadableStreamCancel(this, storedError), true, storedError);\n        } else {\n          shutdown(true, storedError);\n        }\n      });\n\n      // Closing must be propagated forward\n      isOrBecomesClosed(this, reader._closedPromise, () => {\n        if (preventClose === false) {\n          shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n        } else {\n          shutdown();\n        }\n      });\n\n      // Closing must be propagated backward\n      if (dest._state === 'closing' || dest._state === 'closed') {\n        const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n        if (preventCancel === false) {\n          shutdownWithAction(() => ReadableStreamCancel(this, destClosed), true, destClosed);\n        } else {\n          shutdown(true, destClosed);\n        }\n      }\n\n      pipeLoop().catch(err => {\n        currentWrite = Promise.resolve();\n        rethrowAssertionErrorRejection(err);\n      });\n\n      function isOrBecomesErrored(stream, promise, action) {\n        if (stream._state === 'errored') {\n          action(stream._storedError);\n        } else {\n          promise.catch(action).catch(rethrowAssertionErrorRejection);\n        }\n      }\n\n      function isOrBecomesClosed(stream, promise, action) {\n        if (stream._state === 'closed') {\n          action();\n        } else {\n          promise.then(action).catch(rethrowAssertionErrorRejection);\n        }\n      }\n\n      function waitForCurrentWrite() {\n        return currentWrite.catch(() => {});\n      }\n\n      function shutdownWithAction(action, originalIsError, originalError) {\n        if (shuttingDown === true) {\n          return;\n        }\n        shuttingDown = true;\n\n        waitForCurrentWrite().then(() => {\n          return action().then(\n            () => finalize(originalIsError, originalError),\n            newError => finalize(true, newError)\n          );\n        })\n        .catch(rethrowAssertionErrorRejection);\n      }\n\n      function shutdown(isError, error) {\n        if (shuttingDown === true) {\n          return;\n        }\n        shuttingDown = true;\n\n        waitForCurrentWrite().then(() => {\n          finalize(isError, error);\n        })\n        .catch(rethrowAssertionErrorRejection);\n      }\n\n      function finalize(isError, error) {\n        WritableStreamDefaultWriterRelease(writer);\n        ReadableStreamReaderGenericRelease(reader);\n\n        if (isError) {\n          reject(error);\n        } else {\n          resolve(undefined);\n        }\n      }\n    });\n  }\n\n  tee() {\n    if (IsReadableStream(this) === false) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return createArrayFromList(branches);\n  }\n}\n\nmodule.exports = {\n  ReadableStream,\n  IsReadableStreamDisturbed,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize\n};\n\n// Abstract operations for the ReadableStream.\n\nfunction AcquireReadableStreamBYOBReader(stream) {\n  return new ReadableStreamBYOBReader(stream);\n}\n\nfunction AcquireReadableStreamDefaultReader(stream) {\n  return new ReadableStreamDefaultReader(stream);\n}\n\nfunction IsReadableStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamDisturbed(stream) {\n  assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n\n  return stream._disturbed;\n}\n\nfunction IsReadableStreamLocked(stream) {\n  assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamTee(stream, cloneForBranch2) {\n  assert(IsReadableStream(stream) === true);\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader(stream);\n\n  const teeState = {\n    closedOrErrored: false,\n    canceled1: false,\n    canceled2: false,\n    reason1: undefined,\n    reason2: undefined\n  };\n  teeState.promise = new Promise(resolve => {\n    teeState._resolve = resolve;\n  });\n\n  const pull = create_ReadableStreamTeePullFunction();\n  pull._reader = reader;\n  pull._teeState = teeState;\n  pull._cloneForBranch2 = cloneForBranch2;\n\n  const cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n  cancel1._stream = stream;\n  cancel1._teeState = teeState;\n\n  const cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n  cancel2._stream = stream;\n  cancel2._teeState = teeState;\n\n  const underlyingSource1 = Object.create(Object.prototype);\n  createDataProperty(underlyingSource1, 'pull', pull);\n  createDataProperty(underlyingSource1, 'cancel', cancel1);\n  const branch1Stream = new ReadableStream(underlyingSource1);\n\n  const underlyingSource2 = Object.create(Object.prototype);\n  createDataProperty(underlyingSource2, 'pull', pull);\n  createDataProperty(underlyingSource2, 'cancel', cancel2);\n  const branch2Stream = new ReadableStream(underlyingSource2);\n\n  pull._branch1 = branch1Stream._readableStreamController;\n  pull._branch2 = branch2Stream._readableStreamController;\n\n  reader._closedPromise.catch(r => {\n    if (teeState.closedOrErrored === true) {\n      return;\n    }\n\n    ReadableStreamDefaultControllerError(pull._branch1, r);\n    ReadableStreamDefaultControllerError(pull._branch2, r);\n    teeState.closedOrErrored = true;\n  });\n\n  return [branch1Stream, branch2Stream];\n}\n\nfunction create_ReadableStreamTeePullFunction() {\n  function f() {\n    const { _reader: reader, _branch1: branch1, _branch2: branch2, _teeState: teeState/* ,\n            _cloneForBranch2: cloneForBranch2*/ } = f;\n\n    return ReadableStreamDefaultReaderRead(reader).then(result => {\n      assert(typeIsObject(result));\n      const value = result.value;\n      const done = result.done;\n      assert(typeof done === 'boolean');\n\n      if (done === true && teeState.closedOrErrored === false) {\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerClose(branch1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerClose(branch2);\n        }\n        teeState.closedOrErrored = true;\n      }\n\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n\n      const value1 = value;\n      const value2 = value;\n\n      // There is no way to access the cloning code right now in the reference implementation.\n      // If we add one then we'll need an implementation for StructuredClone.\n      // if (teeState.canceled2 === false && cloneForBranch2 === true) {\n      //   value2 = StructuredClone(value2);\n      // }\n\n      if (teeState.canceled1 === false) {\n        ReadableStreamDefaultControllerEnqueue(branch1, value1);\n      }\n\n      if (teeState.canceled2 === false) {\n        ReadableStreamDefaultControllerEnqueue(branch2, value2);\n      }\n    });\n  }\n  return f;\n}\n\nfunction create_ReadableStreamTeeBranch1CancelFunction() {\n  function f(reason) {\n    const { _stream: stream, _teeState: teeState } = f;\n\n    teeState.canceled1 = true;\n    teeState.reason1 = reason;\n    if (teeState.canceled2 === true) {\n      const compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      teeState._resolve(cancelResult);\n    }\n    return teeState.promise;\n  }\n  return f;\n}\n\nfunction create_ReadableStreamTeeBranch2CancelFunction() {\n  function f(reason) {\n    const { _stream: stream, _teeState: teeState } = f;\n\n    teeState.canceled2 = true;\n    teeState.reason2 = reason;\n    if (teeState.canceled1 === true) {\n      const compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      teeState._resolve(cancelResult);\n    }\n    return teeState.promise;\n  }\n  return f;\n}\n\n// ReadableStream API exposed for controllers.\n\nfunction ReadableStreamAddReadIntoRequest(stream) {\n  assert(IsReadableStreamBYOBReader(stream._reader) === true);\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  const promise = new Promise((resolve, reject) => {\n    const readIntoRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._reader._readIntoRequests.push(readIntoRequest);\n  });\n\n  return promise;\n}\n\nfunction ReadableStreamAddReadRequest(stream) {\n  assert(IsReadableStreamDefaultReader(stream._reader) === true);\n  assert(stream._state === 'readable');\n\n  const promise = new Promise((resolve, reject) => {\n    const readRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._reader._readRequests.push(readRequest);\n  });\n\n  return promise;\n}\n\nfunction ReadableStreamCancel(stream, reason) {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return Promise.resolve(undefined);\n  }\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const sourceCancelPromise = stream._readableStreamController[InternalCancel](reason);\n  return sourceCancelPromise.then(() => undefined);\n}\n\nfunction ReadableStreamClose(stream) {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return undefined;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === true) {\n    for (const { _resolve } of reader._readRequests) {\n      _resolve(CreateIterResultObject(undefined, true));\n    }\n    reader._readRequests = [];\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  return undefined;\n}\n\nfunction ReadableStreamError(stream, e) {\n  assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n  assert(stream._state === 'readable', 'state must be readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return undefined;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === true) {\n    for (const readRequest of reader._readRequests) {\n      readRequest._reject(e);\n    }\n\n    reader._readRequests = [];\n  } else {\n    assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n\n    for (const readIntoRequest of reader._readIntoRequests) {\n      readIntoRequest._reject(e);\n    }\n\n    reader._readIntoRequests = [];\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n  reader._closedPromise.catch(() => {});\n}\n\nfunction ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n  const reader = stream._reader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift();\n  readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n}\n\nfunction ReadableStreamFulfillReadRequest(stream, chunk, done) {\n  const reader = stream._reader;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift();\n  readRequest._resolve(CreateIterResultObject(chunk, done));\n}\n\nfunction ReadableStreamGetNumReadIntoRequests(stream) {\n  return stream._reader._readIntoRequests.length;\n}\n\nfunction ReadableStreamGetNumReadRequests(stream) {\n  return stream._reader._readRequests.length;\n}\n\nfunction ReadableStreamHasBYOBReader(stream) {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (IsReadableStreamBYOBReader(reader) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamHasDefaultReader(stream) {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (IsReadableStreamDefaultReader(reader) === false) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nclass ReadableStreamDefaultReader {\n  constructor(stream) {\n    if (IsReadableStream(stream) === false) {\n      throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n    }\n    if (IsReadableStreamLocked(stream) === true) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = [];\n  }\n\n  get closed() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  cancel(reason) {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  read() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      return Promise.reject(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('read from'));\n    }\n\n    return ReadableStreamDefaultReaderRead(this);\n  }\n\n  releaseLock() {\n    if (IsReadableStreamDefaultReader(this) === false) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nclass ReadableStreamBYOBReader {\n  constructor(stream) {\n    if (!IsReadableStream(stream)) {\n      throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' +\n          'byte source');\n    }\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = [];\n  }\n\n  get closed() {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  cancel(reason) {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  read(view) {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return Promise.reject(byobReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return Promise.reject(readerLockException('read from'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return Promise.reject(new TypeError('view must be an array buffer view'));\n    }\n\n    if (view.byteLength === 0) {\n      return Promise.reject(new TypeError('view must have non-zero byteLength'));\n    }\n\n    return ReadableStreamBYOBReaderRead(this, view);\n  }\n\n  releaseLock() {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\n// Abstract operations for the readers.\n\nfunction IsReadableStreamBYOBReader(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamDefaultReader(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamReaderGenericInitialize(reader, stream) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored', 'state must be errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n    reader._closedPromise.catch(() => {});\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nfunction ReadableStreamReaderGenericCancel(reader, reason) {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nfunction ReadableStreamReaderGenericRelease(reader) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n        reader,\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n        reader,\n        new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n  }\n  reader._closedPromise.catch(() => {});\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined;\n}\n\nfunction ReadableStreamBYOBReaderRead(reader, view) {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  // Controllers must implement this.\n  return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n}\n\nfunction ReadableStreamDefaultReaderRead(reader) {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return Promise.resolve(CreateIterResultObject(undefined, true));\n  }\n\n  if (stream._state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(stream._state === 'readable');\n\n  return stream._readableStreamController[InternalPull]();\n}\n\n// Controllers\n\nclass ReadableStreamDefaultController {\n  constructor(stream, underlyingSource, size, highWaterMark) {\n    if (IsReadableStream(stream) === false) {\n      throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n    }\n\n    if (stream._readableStreamController !== undefined) {\n      throw new TypeError(\n        'ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n    }\n\n    this._controlledReadableStream = stream;\n\n    this._underlyingSource = underlyingSource;\n\n    this._queue = [];\n    this._started = false;\n    this._closeRequested = false;\n    this._pullAgain = false;\n    this._pulling = false;\n\n    const normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n    this._strategySize = normalizedStrategy.size;\n    this._strategyHWM = normalizedStrategy.highWaterMark;\n\n    const controller = this;\n\n    const startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n    Promise.resolve(startResult).then(\n      () => {\n        controller._started = true;\n\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      },\n      r => {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }\n    )\n    .catch(rethrowAssertionErrorRejection);\n  }\n\n  get desiredSize() {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  enqueue(chunk) {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  error(e) {\n    if (IsReadableStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    const stream = this._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      throw new TypeError(`The stream is ${stream._state} and so cannot be errored`);\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  [InternalCancel](reason) {\n    this._queue = [];\n\n    return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n  }\n\n  [InternalPull]() {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this._queue);\n\n      if (this._closeRequested === true && this._queue.length === 0) {\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      return Promise.resolve(CreateIterResultObject(chunk, false));\n    }\n\n    const pendingPromise = ReadableStreamAddReadRequest(stream);\n    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    return pendingPromise;\n  }\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (shouldPull === false) {\n    return undefined;\n  }\n\n  if (controller._pulling === true) {\n    controller._pullAgain = true;\n    return undefined;\n  }\n\n  assert(controller._pullAgain === false);\n\n  controller._pulling = true;\n\n  const pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n  pullPromise.then(\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    },\n    e => {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n\n  return undefined;\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state === 'closed' || stream._state === 'errored') {\n    return false;\n  }\n\n  if (controller._closeRequested === true) {\n    return false;\n  }\n\n  if (controller._started === false) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  if (desiredSize > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction ReadableStreamDefaultControllerClose(controller) {\n  const stream = controller._controlledReadableStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamClose(stream);\n  }\n}\n\nfunction ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n  const stream = controller._controlledReadableStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize = 1;\n\n    if (controller._strategySize !== undefined) {\n      try {\n        chunkSize = controller._strategySize(chunk);\n      } catch (chunkSizeE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n        throw chunkSizeE;\n      }\n    }\n\n    try {\n      EnqueueValueWithSize(controller._queue, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\n  return undefined;\n}\n\nfunction ReadableStreamDefaultControllerError(controller, e) {\n  const stream = controller._controlledReadableStream;\n\n  assert(stream._state === 'readable');\n\n  controller._queue = [];\n\n  ReadableStreamError(stream, e);\n}\n\nfunction ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n  if (controller._controlledReadableStream._state === 'readable') {\n    ReadableStreamDefaultControllerError(controller, e);\n  }\n}\n\nfunction ReadableStreamDefaultControllerGetDesiredSize(controller) {\n  const queueSize = GetTotalQueueSize(controller._queue);\n  return controller._strategyHWM - queueSize;\n}\n\nclass ReadableStreamBYOBRequest {\n  constructor(controller, view) {\n    this._associatedReadableByteStreamController = controller;\n    this._view = view;\n  }\n\n  get view() {\n    return this._view;\n  }\n\n  respond(bytesWritten) {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('respond');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  respondWithNewView(view) {\n    if (IsReadableStreamBYOBRequest(this) === false) {\n      throw byobRequestBrandCheckException('respond');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nclass ReadableByteStreamController {\n  constructor(stream, underlyingByteSource, highWaterMark) {\n    if (IsReadableStream(stream) === false) {\n      throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' +\n          'a byte source');\n    }\n\n    if (stream._readableStreamController !== undefined) {\n      throw new TypeError(\n          'ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' +\n              'source');\n    }\n\n    this._controlledReadableStream = stream;\n\n    this._underlyingByteSource = underlyingByteSource;\n\n    this._pullAgain = false;\n    this._pulling = false;\n\n    ReadableByteStreamControllerClearPendingPullIntos(this);\n\n    this._queue = [];\n    this._totalQueuedBytes = 0;\n\n    this._closeRequested = false;\n\n    this._started = false;\n\n    this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\n    const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n        throw new RangeError('autoAllocateChunkSize must be a positive integer');\n      }\n    }\n    this._autoAllocateChunkSize = autoAllocateChunkSize;\n\n    this._pendingPullIntos = [];\n\n    const controller = this;\n\n    const startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n    Promise.resolve(startResult).then(\n      () => {\n        controller._started = true;\n\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      },\n      r => {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }\n    )\n    .catch(rethrowAssertionErrorRejection);\n  }\n\n  get byobRequest() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n      const firstDescriptor = this._pendingPullIntos[0];\n      const view = new Uint8Array(firstDescriptor.buffer,\n                                  firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                  firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n      this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n    }\n\n    return this._byobRequest;\n  }\n\n  get desiredSize() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  close() {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  enqueue(chunk) {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    if (this._closeRequested === true) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  error(e) {\n    if (IsReadableByteStreamController(this) === false) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    const stream = this._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      throw new TypeError(`The stream is ${stream._state} and so cannot be errored`);\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  [InternalCancel](reason) {\n    if (this._pendingPullIntos.length > 0) {\n      const firstDescriptor = this._pendingPullIntos[0];\n      firstDescriptor.bytesFilled = 0;\n    }\n\n    this._queue = [];\n    this._totalQueuedBytes = 0;\n\n    return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n  }\n\n  [InternalPull]() {\n    const stream = this._controlledReadableStream;\n\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      if (this._totalQueuedBytes > 0) {\n        const entry = this._queue.shift();\n        this._totalQueuedBytes -= entry.byteLength;\n\n        ReadableByteStreamControllerHandleQueueDrain(this);\n\n        let view;\n        try {\n          view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n        } catch (viewE) {\n          return Promise.reject(viewE);\n        }\n\n        return Promise.resolve(CreateIterResultObject(view, false));\n      }\n\n      const autoAllocateChunkSize = this._autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        let buffer;\n        try {\n          buffer = new ArrayBuffer(autoAllocateChunkSize);\n        } catch (bufferE) {\n          return Promise.reject(bufferE);\n        }\n\n        const pullIntoDescriptor = {\n          buffer,\n          byteOffset: 0,\n          byteLength: autoAllocateChunkSize,\n          bytesFilled: 0,\n          elementSize: 1,\n          ctor: Uint8Array,\n          readerType: 'default'\n        };\n\n        this._pendingPullIntos.push(pullIntoDescriptor);\n      }\n    } else {\n      assert(this._autoAllocateChunkSize === undefined);\n    }\n\n    const promise = ReadableStreamAddReadRequest(stream);\n\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n\n    return promise;\n  }\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nfunction IsReadableByteStreamController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsReadableStreamBYOBRequest(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller) {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (shouldPull === false) {\n    return undefined;\n  }\n\n  if (controller._pulling === true) {\n    controller._pullAgain = true;\n    return undefined;\n  }\n\n  assert(controller._pullAgain === false);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n  pullPromise.then(\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n\n  return undefined;\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = [];\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n  assert(stream._state !== 'errored', 'state must not be errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.ctor(\n      pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._totalQueuedBytes += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._totalQueuedBytes,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue[0];\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._totalQueuedBytes -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (ready === false) {\n    assert(controller._totalQueuedBytes === 0, 'queue must be empty');\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller) {\n  assert(controller._controlledReadableStream._state === 'readable');\n\n  if (controller._totalQueuedBytes === 0 && controller._closeRequested === true) {\n    ReadableStreamClose(controller._controlledReadableStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n  if (controller._byobRequest === undefined) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined;\n  controller._byobRequest._view = undefined;\n  controller._byobRequest = undefined;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n  assert(controller._closeRequested === false);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._totalQueuedBytes === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos[0];\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerPullInto(controller, view) {\n  const stream = controller._controlledReadableStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = view.constructor.BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor;\n\n  const pullIntoDescriptor = {\n    buffer: view.buffer,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    pullIntoDescriptor.buffer = SameRealmTransfer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    return ReadableStreamAddReadIntoRequest(stream);\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new view.constructor(view.buffer, view.byteOffset, 0);\n    return Promise.resolve(CreateIterResultObject(emptyView, true));\n  }\n\n  if (controller._totalQueuedBytes > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      return Promise.resolve(CreateIterResultObject(filledView, false));\n    }\n\n    if (controller._closeRequested === true) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      return Promise.reject(e);\n    }\n  }\n\n  pullIntoDescriptor.buffer = SameRealmTransfer(pullIntoDescriptor.buffer);\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  const promise = ReadableStreamAddReadIntoRequest(stream);\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n\n  return promise;\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n  firstDescriptor.buffer = SameRealmTransfer(firstDescriptor.buffer);\n\n  assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n\n  const stream = controller._controlledReadableStream;\n\n  while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n    ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n  if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n    throw new RangeError('bytesWritten out of range');\n  }\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    // TODO: Figure out whether we should detach the buffer or not here.\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.buffer = SameRealmTransfer(pullIntoDescriptor.buffer);\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n  const firstDescriptor = controller._pendingPullIntos[0];\n\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(stream._state === 'readable');\n\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(controller) {\n  const descriptor = controller._pendingPullIntos.shift();\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested === true) {\n    return false;\n  }\n\n  if (controller._started === false) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nfunction ReadableByteStreamControllerClose(controller) {\n  const stream = controller._controlledReadableStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  if (controller._totalQueuedBytes > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos[0];\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableStreamClose(stream);\n}\n\nfunction ReadableByteStreamControllerEnqueue(controller, chunk) {\n  const stream = controller._controlledReadableStream;\n\n  assert(controller._closeRequested === false);\n  assert(stream._state === 'readable');\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  const transferredBuffer = SameRealmTransfer(buffer);\n\n  if (ReadableStreamHasDefaultReader(stream) === true) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream) === true) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n}\n\nfunction ReadableByteStreamControllerError(controller, e) {\n  const stream = controller._controlledReadableStream;\n\n  assert(stream._state === 'readable');\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  controller._queue = [];\n\n  ReadableStreamError(stream, e);\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller) {\n  return controller._strategyHWM - controller._totalQueuedBytes;\n}\n\nfunction ReadableByteStreamControllerRespond(controller, bytesWritten) {\n  bytesWritten = Number(bytesWritten);\n  if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n    throw new RangeError('bytesWritten must be a finite');\n  }\n\n  assert(controller._pendingPullIntos.length > 0);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nfunction ReadableByteStreamControllerRespondWithNewView(controller, view) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos[0];\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.byteLength !== view.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n\n  firstDescriptor.buffer = view.buffer;\n\n  ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n}\n\n// Helper functions for the ReadableStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n\n// Helper functions for the readers.\n\nfunction readerLockException(name) {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n\nfunction defaultReaderClosedPromiseInitialize(reader) {\n  reader._closedPromise = new Promise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nfunction defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n  reader._closedPromise = Promise.reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseInitializeAsResolved(reader) {\n  reader._closedPromise = Promise.resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseReject(reader, reason) {\n  assert(reader._closedPromise_resolve !== undefined);\n  assert(reader._closedPromise_reject !== undefined);\n\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nfunction defaultReaderClosedPromiseResetToRejected(reader, reason) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  reader._closedPromise = Promise.reject(reason);\n}\n\nfunction defaultReaderClosedPromiseResolve(reader) {\n  assert(reader._closedPromise_resolve !== undefined);\n  assert(reader._closedPromise_reject !== undefined);\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction byobReaderBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name) {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name) {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n",
    "'use strict';\nconst assert = require('assert');\nconst { InvokeOrNoop, PromiseInvokeOrPerformFallback, PromiseInvokeOrNoop, typeIsObject } = require('./helpers.js');\nconst { ReadableStream, ReadableStreamDefaultControllerClose,\n        ReadableStreamDefaultControllerEnqueue, ReadableStreamDefaultControllerError,\n        ReadableStreamDefaultControllerGetDesiredSize } = require('./readable-stream.js');\nconst { WritableStream, WritableStreamDefaultControllerError } = require('./writable-stream.js');\n\n// Methods on the transform stream controller object\n\nfunction TransformStreamCloseReadable(transformStream) {\n  // console.log('TransformStreamCloseReadable()');\n\n  if (transformStream._errored === true) {\n    throw new TypeError('TransformStream is already errored');\n  }\n\n  if (transformStream._readableClosed === true) {\n    throw new TypeError('Readable side is already closed');\n  }\n\n  TransformStreamCloseReadableInternal(transformStream);\n}\n\nfunction TransformStreamEnqueueToReadable(transformStream, chunk) {\n  // console.log('TransformStreamEnqueueToReadable()');\n\n  if (transformStream._errored === true) {\n    throw new TypeError('TransformStream is already errored');\n  }\n\n  if (transformStream._readableClosed === true) {\n    throw new TypeError('Readable side is already closed');\n  }\n\n  // We throttle transformer.transform invocation based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamEnqueueToReadable() calls.\n\n  const controller = transformStream._readableController;\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(controller, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    // The ReadableStream has already errored itself.\n    transformStream._readableClosed = true;\n    TransformStreamErrorIfNeeded(transformStream, e);\n\n    throw transformStream._storedError;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  const maybeBackpressure = desiredSize <= 0;\n\n  if (maybeBackpressure === true && transformStream._backpressure === false) {\n    // This allows pull() again. When desiredSize is 0, it's possible that a pull() will happen immediately (but\n    // asynchronously) after this because of pending read()s and set _backpressure back to false.\n    //\n    // If pull() could be called from inside enqueue(), then this logic would be wrong. This cannot happen\n    // because there is always a promise pending from start() or pull() when _backpressure is false.\n    TransformStreamSetBackpressure(transformStream, true);\n  }\n}\n\nfunction TransformStreamError(transformStream, e) {\n  if (transformStream._errored === true) {\n    throw new TypeError('TransformStream is already errored');\n  }\n\n  TransformStreamErrorInternal(transformStream, e);\n}\n\n// Abstract operations.\n\nfunction TransformStreamCloseReadableInternal(transformStream) {\n  assert(transformStream._errored === false);\n  assert(transformStream._readableClosed === false);\n\n  try {\n    ReadableStreamDefaultControllerClose(transformStream._readableController);\n  } catch (e) {\n    assert(false);\n  }\n\n  transformStream._readableClosed = true;\n}\n\nfunction TransformStreamErrorIfNeeded(transformStream, e) {\n  if (transformStream._errored === false) {\n    TransformStreamErrorInternal(transformStream, e);\n  }\n}\n\nfunction TransformStreamErrorInternal(transformStream, e) {\n  // console.log('TransformStreamErrorInternal()');\n\n  assert(transformStream._errored === false);\n\n  transformStream._errored = true;\n  transformStream._storedError = e;\n\n  if (transformStream._writableDone === false) {\n    WritableStreamDefaultControllerError(transformStream._writableController, e);\n  }\n  if (transformStream._readableClosed === false) {\n    ReadableStreamDefaultControllerError(transformStream._readableController, e);\n  }\n}\n\n// Used for preventing the next write() call on TransformStreamSink until there\n// is no longer backpressure.\nfunction TransformStreamReadableReadyPromise(transformStream) {\n  assert(transformStream._backpressureChangePromise !== undefined,\n         '_backpressureChangePromise should have been initialized');\n\n  if (transformStream._backpressure === false) {\n    return Promise.resolve();\n  }\n\n  assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n\n  return transformStream._backpressureChangePromise;\n}\n\nfunction TransformStreamSetBackpressure(transformStream, backpressure) {\n  // console.log(`TransformStreamSetBackpressure(${backpressure})`);\n\n  // Passes also when called during construction.\n  assert(transformStream._backpressure !== backpressure,\n         'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n\n  if (transformStream._backpressureChangePromise !== undefined) {\n    // The fulfillment value is just for a sanity check.\n    transformStream._backpressureChangePromise_resolve(backpressure);\n  }\n\n  transformStream._backpressureChangePromise = new Promise(resolve => {\n    transformStream._backpressureChangePromise_resolve = resolve;\n  });\n\n  transformStream._backpressureChangePromise.then(resolution => {\n    assert(resolution !== backpressure,\n           '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n  });\n\n  transformStream._backpressure = backpressure;\n}\n\nfunction TransformStreamDefaultTransform(chunk, transformStreamController) {\n  const transformStream = transformStreamController._controlledTransformStream;\n  TransformStreamEnqueueToReadable(transformStream, chunk);\n  return Promise.resolve();\n}\n\nfunction TransformStreamTransform(transformStream, chunk) {\n  // console.log('TransformStreamTransform()');\n\n  assert(transformStream._errored === false);\n  assert(transformStream._transforming === false);\n  assert(transformStream._backpressure === false);\n\n  transformStream._transforming = true;\n\n  const transformer = transformStream._transformer;\n  const controller = transformStream._transformStreamController;\n\n  const transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller],\n                             TransformStreamDefaultTransform, [chunk, controller]);\n\n  return transformPromise.then(\n    () => {\n      transformStream._transforming = false;\n\n      return TransformStreamReadableReadyPromise(transformStream);\n    },\n    e => {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n}\n\nfunction IsTransformStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsTransformStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nclass TransformStreamSink {\n  constructor(transformStream, startPromise) {\n    this._transformStream = transformStream;\n    this._startPromise = startPromise;\n  }\n\n  start(c) {\n    const transformStream = this._transformStream;\n\n    transformStream._writableController = c;\n\n    return this._startPromise.then(() => TransformStreamReadableReadyPromise(transformStream));\n  }\n\n  write(chunk) {\n    // console.log('TransformStreamSink.write()');\n\n    const transformStream = this._transformStream;\n\n    return TransformStreamTransform(transformStream, chunk);\n  }\n\n  abort() {\n    const transformStream = this._transformStream;\n    transformStream._writableDone = true;\n    TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n  }\n\n  close() {\n    // console.log('TransformStreamSink.close()');\n\n    const transformStream = this._transformStream;\n\n    assert(transformStream._transforming === false);\n\n    transformStream._writableDone = true;\n\n    const flushPromise = PromiseInvokeOrNoop(transformStream._transformer,\n                         'flush', [transformStream._transformStreamController]);\n    // Return a promise that is fulfilled with undefined on success.\n    return flushPromise.then(() => {\n      if (transformStream._errored === true) {\n        return Promise.reject(transformStream._storedError);\n      }\n      if (transformStream._readableClosed === false) {\n        TransformStreamCloseReadableInternal(transformStream);\n      }\n      return Promise.resolve();\n    }).catch(r => {\n      TransformStreamErrorIfNeeded(transformStream, r);\n      return Promise.reject(transformStream._storedError);\n    });\n  }\n}\n\nclass TransformStreamSource {\n  constructor(transformStream, startPromise) {\n    this._transformStream = transformStream;\n    this._startPromise = startPromise;\n  }\n\n  start(c) {\n    const transformStream = this._transformStream;\n\n    transformStream._readableController = c;\n\n    return this._startPromise.then(() => {\n      // Prevent the first pull() call until there is backpressure.\n\n      assert(transformStream._backpressureChangePromise !== undefined,\n             '_backpressureChangePromise should have been initialized');\n\n      if (transformStream._backpressure === true) {\n        return Promise.resolve();\n      }\n\n      assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n\n      return transformStream._backpressureChangePromise;\n    });\n  }\n\n  pull() {\n    // console.log('TransformStreamSource.pull()');\n\n    const transformStream = this._transformStream;\n\n    // Invariant. Enforced by the promises returned by start() and pull().\n    assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n\n    assert(transformStream._backpressureChangePromise !== undefined,\n           '_backpressureChangePromise should have been initialized');\n\n    TransformStreamSetBackpressure(transformStream, false);\n\n    // Prevent the next pull() call until there is backpressure.\n    return transformStream._backpressureChangePromise;\n  }\n\n  cancel() {\n    const transformStream = this._transformStream;\n    transformStream._readableClosed = true;\n    TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n  }\n}\n\nclass TransformStreamDefaultController {\n  constructor(transformStream) {\n    if (IsTransformStream(transformStream) === false) {\n      throw new TypeError('TransformStreamDefaultController can only be ' +\n                          'constructed with a TransformStream instance');\n    }\n\n    if (transformStream._transformStreamController !== undefined) {\n      throw new TypeError('TransformStreamDefaultController instances can ' +\n                          'only be created by the TransformStream constructor');\n    }\n\n    this._controlledTransformStream = transformStream;\n  }\n\n  get desiredSize() {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const transformStream = this._controlledTransformStream;\n    const readableController = transformStream._readableController;\n\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n  }\n\n  enqueue(chunk) {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n  }\n\n  close() {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    TransformStreamCloseReadable(this._controlledTransformStream);\n  }\n\n  error(reason) {\n    if (IsTransformStreamDefaultController(this) === false) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamError(this._controlledTransformStream, reason);\n  }\n}\n\nclass TransformStream {\n  constructor(transformer = {}) {\n    this._transformer = transformer;\n    const { readableStrategy, writableStrategy } = transformer;\n\n    this._transforming = false;\n    this._errored = false;\n    this._storedError = undefined;\n\n    this._writableController = undefined;\n    this._readableController = undefined;\n    this._transformStreamController = undefined;\n\n    this._writableDone = false;\n    this._readableClosed = false;\n\n    this._backpressure = undefined;\n    this._backpressureChangePromise = undefined;\n    this._backpressureChangePromise_resolve = undefined;\n\n    this._transformStreamController = new TransformStreamDefaultController(this);\n\n    let startPromise_resolve;\n    const startPromise = new Promise(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    const source = new TransformStreamSource(this, startPromise);\n\n    this._readable = new ReadableStream(source, readableStrategy);\n\n    const sink = new TransformStreamSink(this, startPromise);\n\n    this._writable = new WritableStream(sink, writableStrategy);\n\n    assert(this._writableController !== undefined);\n    assert(this._readableController !== undefined);\n\n    const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n    // Set _backpressure based on desiredSize. As there is no read() at this point, we can just interpret\n    // desiredSize being non-positive as backpressure.\n    TransformStreamSetBackpressure(this, desiredSize <= 0);\n\n    const transformStream = this;\n    const startResult = InvokeOrNoop(transformer, 'start',\n                          [transformStream._transformStreamController]);\n    startPromise_resolve(startResult);\n    startPromise.catch(e => {\n      // The underlyingSink and underlyingSource will error the readable and writable ends on their own.\n      if (transformStream._errored === false) {\n        transformStream._errored = true;\n        transformStream._storedError = e;\n      }\n    });\n  }\n\n  get readable() {\n    if (IsTransformStream(this) === false) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  get writable() {\n    if (IsTransformStream(this) === false) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\nmodule.exports = { TransformStream };\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name) {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n",
    "'use strict';\nconst assert = require('assert');\n\nexports.rethrowAssertionErrorRejection = e => {\n  // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n  // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n  // expect any errors, but assertion errors are always problematic.\n  if (e && e.constructor === assert.AssertionError) {\n    setTimeout(() => {\n      throw e;\n    }, 0);\n  }\n};\n",
    "'use strict';\nconst assert = require('assert');\nconst { InvokeOrNoop, PromiseInvokeOrNoop, PromiseInvokeOrFallbackOrNoop, ValidateAndNormalizeQueuingStrategy,\n        typeIsObject } = require('./helpers.js');\nconst { rethrowAssertionErrorRejection } = require('./utils.js');\nconst { DequeueValue, EnqueueValueWithSize, GetTotalQueueSize, PeekQueueValue } = require('./queue-with-sizes.js');\n\nclass WritableStream {\n  constructor(underlyingSink = {}, { size, highWaterMark = 1 } = {}) {\n    this._state = 'writable';\n    this._storedError = undefined;\n\n    this._writer = undefined;\n\n    // Initialize to undefined first because the constructor of the controller checks this\n    // variable to validate the caller.\n    this._writableStreamController = undefined;\n\n    // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n    // producer without waiting for the queued writes to finish.\n    this._writeRequests = [];\n\n    // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n    // them from being erroneously rejected on error. If a write() call is pending, the request is stored here.\n    this._pendingWriteRequest = undefined;\n\n    // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n    // has been detached.\n    this._pendingCloseRequest = undefined;\n\n    // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n    this._pendingAbortRequest = undefined;\n\n    const type = underlyingSink.type;\n\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n  }\n\n  get locked() {\n    if (IsWritableStream(this) === false) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  abort(reason) {\n    if (IsWritableStream(this) === false) {\n      return Promise.reject(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this) === true) {\n      return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  getWriter() {\n    if (IsWritableStream(this) === false) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nmodule.exports = {\n  AcquireWritableStreamDefaultWriter,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerError,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter(stream) {\n  return new WritableStreamDefaultWriter(stream);\n}\n\nfunction IsWritableStream(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction IsWritableStreamLocked(stream) {\n  assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream, reason) {\n  const state = stream._state;\n  if (state === 'closed') {\n    return Promise.resolve(undefined);\n  }\n  if (state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'closing');\n\n  const error = new TypeError('Aborted');\n\n  WritableStreamError(stream, error);\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n  if (controller._writing === true || controller._inClose === true) {\n    const promise = new Promise((resolve, reject) => {\n      const abortRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n\n      stream._pendingAbortRequest = abortRequest;\n    });\n    if (controller._writing === true) {\n      return promise.then(() => WritableStreamDefaultControllerAbort(stream._writableStreamController, reason));\n    }\n    return promise;\n  }\n\n  return WritableStreamDefaultControllerAbort(stream._writableStreamController, reason);\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream) {\n  assert(IsWritableStreamLocked(stream) === true);\n  assert(stream._state === 'writable');\n\n  const promise = new Promise((resolve, reject) => {\n    const writeRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamError(stream, e) {\n  const oldState = stream._state;\n  assert(oldState === 'writable' || oldState === 'closing');\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const controller = stream._writableStreamController;\n  // This method can be called during the construction of the controller, in which case \"controller\" will be undefined\n  // but the flags are guaranteed to be false anyway.\n  if (controller === undefined || controller._writing === false && controller._inClose === false) {\n    WritableStreamRejectPromisesInReactionToError(stream);\n  }\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    if (oldState === 'writable' &&\n        WritableStreamDefaultControllerGetBackpressure(stream._writableStreamController) === true) {\n      defaultWriterReadyPromiseReject(writer, e);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, e);\n    }\n    writer._readyPromise.catch(() => {});\n  }\n}\n\nfunction WritableStreamFinishClose(stream) {\n  assert(stream._state === 'closing' || stream._state === 'errored');\n\n  if (stream._state === 'closing') {\n    defaultWriterClosedPromiseResolve(stream._writer);\n    stream._state = 'closed';\n  } else {\n    assert(stream._state === 'errored');\n    defaultWriterClosedPromiseReject(stream._writer, stream._storedError);\n    stream._writer._closedPromise.catch(() => {});\n  }\n\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._resolve();\n    stream._pendingAbortRequest = undefined;\n  }\n}\n\nfunction WritableStreamRejectPromisesInReactionToError(stream) {\n  assert(stream._state === 'errored');\n  assert(stream._pendingWriteRequest === undefined);\n\n  const storedError = stream._storedError;\n  for (const writeRequest of stream._writeRequests) {\n    writeRequest._reject(storedError);\n  }\n  stream._writeRequests = [];\n\n  if (stream._pendingCloseRequest !== undefined) {\n    assert(stream._writableStreamController._inClose === false);\n    stream._pendingCloseRequest._reject(storedError);\n    stream._pendingCloseRequest = undefined;\n  }\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, storedError);\n    writer._closedPromise.catch(() => {});\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream, backpressure) {\n  assert(stream._state === 'writable');\n\n  const writer = stream._writer;\n  if (writer === undefined) {\n    return;\n  }\n\n  if (backpressure === true) {\n    defaultWriterReadyPromiseReset(writer);\n  } else {\n    assert(backpressure === false);\n    defaultWriterReadyPromiseResolve(writer);\n  }\n}\n\nclass WritableStreamDefaultWriter {\n  constructor(stream) {\n    if (IsWritableStream(stream) === false) {\n      throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n    }\n    if (IsWritableStreamLocked(stream) === true) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable' || state === 'closing') {\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored', 'state must be errored');\n\n      defaultWriterClosedPromiseInitializeAsRejected(this, stream._storedError);\n      this._closedPromise.catch(() => {});\n    }\n\n    if (state === 'writable' &&\n        WritableStreamDefaultControllerGetBackpressure(stream._writableStreamController) === true) {\n      defaultWriterReadyPromiseInitialize(this);\n    } else {\n      defaultWriterReadyPromiseInitializeAsResolved(this, undefined);\n    }\n  }\n\n  get closed() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  get desiredSize() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  get ready() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  abort(reason) {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return Promise.reject(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  close() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return Promise.reject(defaultWriterLockException('close'));\n    }\n\n    if (stream._state === 'closing') {\n      return Promise.reject(new TypeError('cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  releaseLock() {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  write(chunk) {\n    if (IsWritableStreamDefaultWriter(this) === false) {\n      return Promise.reject(defaultWriterBrandCheckException('write'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n\n    if (stream._state === 'closing') {\n      return Promise.reject(new TypeError('Cannot write to an already-closed stream'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return true;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer, reason) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return Promise.reject(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable');\n\n  const promise = new Promise((resolve, reject) => {\n    const closeRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._pendingCloseRequest = closeRequest;\n  });\n\n  if (WritableStreamDefaultControllerGetBackpressure(stream._writableStreamController) === true) {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  stream._state = 'closing';\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (state === 'closing' || state === 'closed') {\n    return Promise.resolve();\n  }\n\n  if (state === 'errored') {\n    return Promise.reject(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer) {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    'Writer was released and can no longer be used to monitor the stream\\'s closedness');\n  const state = stream._state;\n\n  if (state === 'writable' || state === 'closing' || stream._pendingAbortRequest !== undefined) {\n    defaultWriterClosedPromiseReject(writer, releasedError);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, releasedError);\n  }\n  writer._closedPromise.catch(() => {});\n\n  if (state === 'writable' &&\n      WritableStreamDefaultControllerGetBackpressure(stream._writableStreamController) === true) {\n    defaultWriterReadyPromiseReject(writer, releasedError);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, releasedError);\n  }\n  writer._readyPromise.catch(() => {});\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined;\n}\n\nfunction WritableStreamDefaultWriterWrite(writer, chunk) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return Promise.reject(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be written to`));\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(stream._writableStreamController, chunk);\n\n  return promise;\n}\n\nclass WritableStreamDefaultController {\n  constructor(stream, underlyingSink, size, highWaterMark) {\n    if (IsWritableStream(stream) === false) {\n      throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n    }\n\n    if (stream._writableStreamController !== undefined) {\n      throw new TypeError(\n        'WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n    }\n\n    this._controlledWritableStream = stream;\n\n    this._underlyingSink = underlyingSink;\n\n    this._queue = [];\n    this._started = false;\n    this._writing = false;\n    this._inClose = false;\n\n    const normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n    this._strategySize = normalizedStrategy.size;\n    this._strategyHWM = normalizedStrategy.highWaterMark;\n\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n    if (backpressure === true) {\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n\n    const controller = this;\n\n    const startResult = InvokeOrNoop(underlyingSink, 'start', [this]);\n    Promise.resolve(startResult).then(\n      () => {\n        controller._started = true;\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n      },\n      r => {\n        WritableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }\n    )\n    .catch(rethrowAssertionErrorRejection);\n  }\n\n  error(e) {\n    if (IsWritableStreamDefaultController(this) === false) {\n      throw new TypeError(\n        'WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n    }\n\n    const state = this._controlledWritableStream._state;\n    if (state === 'closed' || state === 'errored') {\n      throw new TypeError(`The stream is ${state} and so cannot be errored`);\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction WritableStreamDefaultControllerAbort(controller, reason) {\n  controller._queue = [];\n\n  const sinkAbortPromise = PromiseInvokeOrFallbackOrNoop(controller._underlyingSink, 'abort', [reason],\n                                                         'close', [controller]);\n  return sinkAbortPromise.then(() => undefined);\n}\n\nfunction WritableStreamDefaultControllerClose(controller) {\n  EnqueueValueWithSize(controller._queue, 'close', 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller) {\n  const queueSize = GetTotalQueueSize(controller._queue);\n  return controller._strategyHWM - queueSize;\n}\n\nfunction WritableStreamDefaultControllerWrite(controller, chunk) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  let chunkSize = 1;\n\n  if (controller._strategySize !== undefined) {\n    try {\n      chunkSize = controller._strategySize(chunk);\n    } catch (chunkSizeE) {\n      // TODO: Should we notify the sink of this error?\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return;\n    }\n  }\n\n  const writeRecord = { chunk };\n\n  const lastBackpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\n  try {\n    EnqueueValueWithSize(controller._queue, writeRecord, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  if (stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    if (lastBackpressure !== backpressure) {\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction IsWritableStreamDefaultController(x) {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n  if (controller._controlledWritableStream._state === 'closed' ||\n      controller._controlledWritableStream._state === 'errored') {\n    return;\n  }\n\n  if (controller._started === false) {\n    return;\n  }\n\n  if (controller._writing === true) {\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const writeRecord = PeekQueueValue(controller._queue);\n  if (writeRecord === 'close') {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller, e) {\n  if (controller._controlledWritableStream._state === 'writable' ||\n      controller._controlledWritableStream._state === 'closing') {\n    WritableStreamDefaultControllerError(controller, e);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'closing', 'can\\'t process final write record unless already closed');\n\n  DequeueValue(controller._queue);\n  assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n\n  controller._inClose = true;\n  const sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', [controller]);\n  sinkClosePromise.then(\n    () => {\n      assert(controller._inClose === true);\n      controller._inClose = false;\n      if (stream._state !== 'closing' && stream._state !== 'errored') {\n        return;\n      }\n\n      assert(stream._pendingCloseRequest !== undefined);\n      stream._pendingCloseRequest._resolve(undefined);\n      stream._pendingCloseRequest = undefined;\n\n      WritableStreamFinishClose(stream);\n    },\n    r => {\n      assert(controller._inClose === true);\n      controller._inClose = false;\n      assert(stream._pendingCloseRequest !== undefined);\n      stream._pendingCloseRequest._reject(r);\n      stream._pendingCloseRequest = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._reject(r);\n        stream._pendingAbortRequest = undefined;\n      }\n      WritableStreamDefaultControllerErrorIfNeeded(controller, r);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n  controller._writing = true;\n\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._pendingWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._pendingWriteRequest = stream._writeRequests.shift();\n  const sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n  sinkWritePromise.then(\n    () => {\n      const state = stream._state;\n\n      assert(controller._writing === true);\n      controller._writing = false;\n\n      assert(stream._pendingWriteRequest !== undefined);\n      stream._pendingWriteRequest._resolve(undefined);\n      stream._pendingWriteRequest = undefined;\n\n      if (state === 'errored') {\n        WritableStreamRejectPromisesInReactionToError(stream);\n\n        if (stream._pendingAbortRequest !== undefined) {\n          stream._pendingAbortRequest._resolve();\n          stream._pendingAbortRequest = undefined;\n        }\n        return;\n      }\n      const lastBackpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      DequeueValue(controller._queue);\n      if (state !== 'closing') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        if (lastBackpressure !== backpressure) {\n          WritableStreamUpdateBackpressure(controller._controlledWritableStream, backpressure);\n        }\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    r => {\n      assert(controller._writing === true);\n      controller._writing = false;\n\n      assert(stream._pendingWriteRequest !== undefined);\n      stream._pendingWriteRequest._reject(r);\n      stream._pendingWriteRequest = undefined;\n      if (stream._state === 'errored') {\n        stream._storedError = r;\n        WritableStreamRejectPromisesInReactionToError(stream);\n      }\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._reject(r);\n        stream._pendingAbortRequest = undefined;\n      }\n      WritableStreamDefaultControllerErrorIfNeeded(controller, r);\n    }\n  )\n  .catch(rethrowAssertionErrorRejection);\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller) {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller, e) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable' || stream._state === 'closing');\n\n  WritableStreamError(stream, e);\n\n  controller._queue = [];\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name) {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name) {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name) {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer) {\n  writer._closedPromise = new Promise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n  writer._closedPromise = Promise.reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer) {\n  writer._closedPromise = Promise.resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n}\n\nfunction defaultWriterClosedPromiseReject(writer, reason) {\n  assert(writer._closedPromise_resolve !== undefined);\n  assert(writer._closedPromise_reject !== undefined);\n\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer, reason) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n\n  writer._closedPromise = Promise.reject(reason);\n}\n\nfunction defaultWriterClosedPromiseResolve(writer) {\n  assert(writer._closedPromise_resolve !== undefined);\n  assert(writer._closedPromise_reject !== undefined);\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer) {\n  writer._readyPromise = new Promise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer) {\n  writer._readyPromise = Promise.resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n}\n\nfunction defaultWriterReadyPromiseReject(writer, reason) {\n  assert(writer._readyPromise_resolve !== undefined);\n  assert(writer._readyPromise_reject !== undefined);\n\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n}\n\nfunction defaultWriterReadyPromiseReset(writer) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  writer._readyPromise = new Promise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer, reason) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  writer._readyPromise = Promise.reject(reason);\n}\n\nfunction defaultWriterReadyPromiseResolve(writer) {\n  assert(writer._readyPromise_resolve !== undefined);\n  assert(writer._readyPromise_reject !== undefined);\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n}\n"
  ]
}